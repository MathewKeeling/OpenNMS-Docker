#!/bin/bash

# Author: Mathew Keeling
# 
# Date: 12 February 2024


# This script sends a test event.
# This is useful when troubleshooting notification troubles.

# List of Daemons:
# Ackd
#       The acknowledge daemon is responsible for alarm acknowledgement.
# Actiond
#       Generates Java actions based on received events.
# Alarmd
#       The alarm daemon handles alarm workflows.
# AsteriskGateway
#       Communicates with an Asterisk server for VOIP notification.
# Bsmd
#       Processes updates of Business Service Monitoring availability.
# Collectd
#       Collects data from nodes to persist performance metrics over time.
# Correlator
#       Associates multiple related events.
# Discovery
#       Provides network discovery functions to scan (either one time only or regularly) for nodes that should be added into the Horizon database.
# EnLinkd
#       The enhanced link daemon discovers connections between nodes using data generated by various link discovery protocols and accessible via SNMP.
# EventTranslator
#       The event translator can transform and enhance the data from Horizon events that other daemons generate.
# Eventd
#       Receives and writes event information.
# JettyServer
#       The Jetty server provides the Horizon web user interface.
# Karaf
#       The Karaf runtime is the framework that maintains all the other daemons running within the Horizon system.
# KarafStartupMonitor
#       Used in startup script to detect if Karaf started properly.
# Notifd
#       The notification daemon sends notifications to other systems based on event UEIs.
# PassiveStatusd
#       The Passive Status Keeper provides a mechanism to generate service outages based on events. This can be helpful for devices that cannot be directly polled to check service state.
# PerspectivePoller
#       Handles Application Perspective Monitoring availability calculations.
# Pollerd
#       The poller daemon is responsible for service availability monitoring.
# Provisiond
#       The provision daemon handles the node import and service detection processes.
# Queued
#       The queue daemon handles scheduling of tasks to run in the future.
# Reportd
#       The report daemon generates and schedules reports.
# Rtcd
#       The Real Time Console daemon handles uptime percentage calculations.
# Scriptd
#       Scriptd allows the user to configure Bean Shell script to run in response to events.
# SnmpPoller
#       The SNMP poller checks SNMP interface admin status. It is separate from pollerdâ€™s SnmpMonitor.
# Statsd
#       Generates statistical reports from node data.
# Syslogd
#       A syslog daemon that allows retrieval and parsing of syslog messages to generate events.
# Telemetryd
#       The Telemetry daemon collects sensor data sent from nodes to Horizon.
# Ticketer
#       The ticketing integration daemon lets Horizon create trouble tickets in external systems.
# Tl1d
#       The TL1 daemon enables reception of TL1 autonomous messages.
# Trapd
#       The trap daemon provides an SNMP server that accepts SNMP traps that can be converted to events.
# Vacuumd
#       The vacuum daemon executes daily cleanup tasks for the PostgreSQL database.



# This script executes the docker exec command to reload the specified daemon.

# Usage: ./reload_daemon.sh [daemon]

# Arguments:
#   daemon: The name of the daemon to be reloaded.

# Check if a daemon is provided as an argument
if [ $# -ne 1 ]; then
    echo "Error: Please provide the name of the daemon to be reloaded as an argument."
    exit 1
fi

# Get the daemon name from the argument
daemon=$1

# Execute the docker exec command to reload the specified daemon
echo "Executing docker exec command to reload daemon: $daemon"
docker exec installdir /bin/bash -c "/opt/opennms/bin/send-event.pl uei.opennms.org/internal/reloadDaemonConfig --parm 'daemonName $daemon'"
